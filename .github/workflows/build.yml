name: Build TrainPixels Binary

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y upx-ucl

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r scripts/requirements-build.txt

      - name: Make build script executable
        run: chmod +x scripts/build.sh

      - name: Build binary
        run: ./scripts/build.sh

      - name: Verify build output
        run: |
          echo "Build completed. Checking output..."
          ls -la dist/
          if [ -f "dist/trainpixels" ]; then
            echo "Binary created successfully"
            file dist/trainpixels
            du -h dist/trainpixels
          else
            echo "Binary not found"
            exit 1
          fi

      - name: Prepare artifact
        run: |
          echo "Preparing release artifact..."
          cd dist/trainpixels-package
          tar -czf ../trainpixels-linux-x64.tar.gz *
          cd ..
          ls -la trainpixels-linux-x64.tar.gz

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: trainpixels-binary-${{ github.sha }}
          path: |
            dist/trainpixels
            dist/trainpixels-linux-x64.tar.gz
          retention-days: 30

      - name: Upload installation package
        uses: actions/upload-artifact@v4
        with:
          name: trainpixels-package-${{ github.sha }}
          path: dist/trainpixels-package/
          retention-days: 30

  # Optional: Create release on tags
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: trainpixels-binary-${{ github.sha }}
          path: ./artifacts/

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: TrainPixels ${{ github.ref }}
          body: |
            ## TrainPixels Release

            Automated release build for TrainPixels LED Controller.

            ### Installation
            1. Download `trainpixels-linux-x64.tar.gz`
            2. Extract: `tar -xzf trainpixels-linux-x64.tar.gz`
            3. Install: `cd trainpixels-package && sudo ./install.sh`

            ### Usage
            - Direct: `trainpixels`
            - Service: `sudo systemctl start trainpixels`

          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/trainpixels-linux-x64.tar.gz
          asset_name: trainpixels-linux-x64.tar.gz
          asset_content_type: application/gzip
